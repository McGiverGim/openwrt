name: Build IPQ807x
on: 
    push:
    workflow_dispatch:

jobs:
    build:
        name: Prepare and build IPQ807x generic images
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a

            - name: Generate config for IPQ807x Generic
              run: |
                echo "CONFIG_TARGET_ipq807x_generic=y\n" > .config
                echo "CONFIG_TARGET_ipq807x_generic_DEVICE_xiaomi_ax3600=y\n" >> .config
                echo "CONFIG_TARGET_ALL_PROFILES=y\n" >> .config
                echo "CONFIG_TARGET_PER_DEVICE_ROOTFS=y\n" >> .config
                echo "CONFIG_TARGET_ROOTFS_INITRAMFS=y\n" >> .config
                echo "CONFIG_ALL_NONSHARED=y\n" >> .config

                echo "CONFIG_PACKAGE_kmod-qca-mcs=y\n" >> .config

                echo "CONFIG_PACKAGE_kmod-qca-nss-drv=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-bridge-mgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-clmapmgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-dtlsmgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-eogremgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-gre=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-l2tpv2=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-lag-mgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-map-t=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-match=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-netlink=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-pppoe=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-pptp=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-pvxlanmgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-tlsmgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-tun6rd=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-tunipip6=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-vlan-mgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-vxlanmgr=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-igs=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-qca-nss-drv-qdisc=y\n" >> .config

                echo "CONFIG_PACKAGE_luci=y\n" >> .config
                echo "CONFIG_PACKAGE_wpad-basic-mbedtls=m\n" >> .config
                echo "CONFIG_PACKAGE_wpad-mbedtls=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-i18n-statistics-es=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-i18n-opkg-es=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-lua-runtime=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-i18n-base-es=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-i18n-firewall-es=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-i18n-attendedsysupgrade-es=y\n" >> .config
                echo "CONFIG_PACKAGE_collectd-mod-uptime=y\n" >> .config
                echo "CONFIG_PACKAGE_htop=y\n" >> .config
                echo "CONFIG_PACKAGE_diffutils=y\n" >> .config
                echo "CONFIG_PACKAGE_usteer=y\n" >> .config
                echo "CONFIG_PACKAGE_jq=y\n" >> .config
                echo "CONFIG_PACKAGE_fping=y\n" >> .config
                echo "CONFIG_PACKAGE_arp-scan=y\n" >> .config

                make defconfig

                cat .config

            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s

            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s

            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s

            - name: TAR output
              run: tar -cvf ipq807xx-images.tar bin/targets/ipq807x/generic

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: ipq807x-images
                path: ipq807xx-images.tar
